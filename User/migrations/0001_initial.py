# Generated by Django 5.2.1 on 2025-06-20 09:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Core', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(help_text="The student's unique email address.", max_length=254, unique=True)),
                ('full_name', models.CharField(blank=True, default='', help_text="The student's full name.", max_length=30, null=True)),
                ('matric_number', models.CharField(blank=True, help_text="The student's unique matriculation number.", max_length=20, null=True, unique=True)),
                ('level', models.CharField(choices=[('100', '100'), ('200', '200'), ('300', '300'), ('400', '400'), ('500', '500')], default='100', help_text="The student's level of study.", max_length=3)),
                ('is_class_representative', models.BooleanField(default=False, help_text='Indicates whether the user is a class representative. Defaults to False.')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False, help_text='Indicates whether the user has all admin permissions. Defaults to False.')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the user account is active. Defaults to False and user needs to verify email on signup before it can be set to True.')),
                ('last_used_ip_address', models.GenericIPAddressField(blank=True, help_text='The last IP address used by the user.', null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, help_text='The date and time when the user joined.')),
                ('department', models.ForeignKey(blank=True, help_text='The department to which the student belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.department')),
                ('faculty', models.ForeignKey(blank=True, help_text='The faculty to which the student belongs.', null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.faculty')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
